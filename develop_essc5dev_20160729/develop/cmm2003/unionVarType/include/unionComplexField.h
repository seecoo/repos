// Automatically generated codes
// Generated Date and Time 20100602171209
// Generated by ud090401

#ifndef _unionComplexField_
#define _unionComplexField_

#ifdef _unionComplexField_struct_20090421_
#include "unionComplexField_struct_20090421.h"
#else
#include "unionComplexField_struct_20090421.h"
#endif
//***** 以下定义函数声明 *****


/*
功能：
	结构的缺省赋值函数
输入参数:
	prec	记录指针
输出参数:
	无
返回值
	>=0		成功,拼装的记录串的长度
	<0		失败,错误码
*/
int UnionFormDefaultValueOfComplexFieldRec(PUnionComplexField prec);


/*
功能：
	将记录结构转换为记录字串的函数
输入参数:
	prec	记录指针
	sizeOfBuf	接收记录字串的缓冲的大小
输出参数:
	recStr	记录字串
返回值
	>=0		成功,拼装的记录串的长度
	<0		失败,错误码
*/
int UnionFormRecStrFromComplexFieldRec(PUnionComplexField prec,char *recStr,int sizeOfBuf);


/*
功能：
	将记录结构转换为记录字串的函数
输入参数:
	prec	记录指针
	sizeOfBuf	接收记录字串的缓冲的大小
输出参数:
	recStr	记录字串
返回值
	>=0		成功,拼装的记录串的长度
	<0		失败,错误码
*/
int UnionFormPrimaryKeyRecStrFromComplexFieldRec(PUnionComplexField prec,char *recStr,int sizeOfBuf);


/*
功能：
	将记录字串转换为记录结构的关键字的函数
输入参数:
	recStr	记录字串
	lenOfRecStr	记录串长度
输出参数:
	prec	记录指针
返回值
	>=0		读出的域数目
	<0		失败,错误码
*/
int UnionFormPrimaryKeyOfComplexFieldRecFromRecStr(char *recStr,int lenOfRecStr,PUnionComplexField prec);


/*
功能：
	将记录结构转换为记录字串的函数
输入参数:
	prec	记录指针
	sizeOfBuf	接收记录字串的缓冲的大小
输出参数:
	recStr	记录字串
返回值
	>=0		成功,拼装的记录串的长度
	<0		失败,错误码
*/
int UnionFormNonPrimaryKeyRecStrFromComplexFieldRec(PUnionComplexField prec,char *recStr,int sizeOfBuf);


/*
功能：
	将记录结构转换为记录字串的函数
输入参数:
	recStr	记录字串
	lenOfRecStr	记录串长度
输出参数:
	prec	记录指针
返回值
	>=0		读出的域数目
	<0		失败,错误码
*/
int UnionFormComplexFieldRecFromRecStr(char *recStr,int lenOfRecStr,PUnionComplexField prec);


/*
功能：
	插入一个记录
输入参数:
	prec	记录指针
输出参数:
	prec	记录指针
返回值
	>=0		成功，返回记录的大小
	<0		失败,错误码
*/
int UnionInsertComplexFieldRec(PUnionComplexField prec);


/*
功能：
	删除一个记录
输入参数:
	mainMenuName 主菜单名称
	complexFieldID 复合域标识
输出参数:
	无
返回值:
	>=0 成功
	<0 失败
*/
int UnionDeleteComplexFieldRec(char *mainMenuName,char *complexFieldID);
/*
函数功能:
	修改指定的表域:
输入参数:
	mainMenuName 主菜单名称
	complexFieldID 复合域标识
	fldName 域名称
	fldValue 域值
	fldValueLen 域值长度
输出参数:
	无
返回值:
	>=0 成功
	<0 失败
*/
int UnionUpdateSpecFldOfComplexFieldRec(char *mainMenuName,char *complexFieldID,char *fldName,char *fldValue,int lenOfFldValue);
/*
函数功能:
	修改指定的表域:
输入参数:
	mainMenuName 主菜单名称
	complexFieldID 复合域标识
	fldName 域名称
	fldValue 域值
输出参数:
	无
返回值:
	>=0 成功
	<0 失败
*/
int UnionUpdateIntTypeSpecFldOfComplexFieldRec(char *mainMenuName,char *complexFieldID,char *fldName,int fldValue);


/*
功能：
	修改一个记录
输入参数:
	prec	记录指针
输出参数:
	prec	记录指针
返回值
	>=0		成功，返回记录的大小
	<0		失败,错误码
*/
int UnionUpdateComplexFieldRec(PUnionComplexField prec);


/*
功能：
	读取一个记录
输入参数:
	mainMenuName 主菜单名称
	complexFieldID 复合域标识
输出参数:
	prec	记录指针
返回值
	>=0		成功，返回记录的大小
	<0		失败,错误码
*/
int UnionReadComplexFieldRec(char *mainMenuName,char *complexFieldID,PUnionComplexField prec);


/*
功能：
	读取一个记录
输入参数:
	mainMenuName 主菜单名称
	complexFieldID 复合域标识
	fldName		域名
	sizeOfBuf	域值缓冲大小
输出参数:
	fldValue	域值
返回值
	>=0		成功，返回域值的长度
	<0		失败,错误码
*/
int UnionReadComplexFieldRecFld(char *mainMenuName,char *complexFieldID,char *fldName,char *fldValue,int sizeOfBuf);


/*
功能：
	读取一个记录
输入参数:
	mainMenuName 主菜单名称
	complexFieldID 复合域标识
	fldName		域名
输出参数:
	fldValue	域值
返回值
	>=0		成功，返回域值的长度
	<0		失败,错误码
*/
int UnionReadComplexFieldRecIntTypeFld(char *mainMenuName,char *complexFieldID,char *fldName,int *fldValue);


/*
功能：
	根据条件，批量读取数据
输入参数:
	condition	条件字串
	maxRecNum		读取的最大记录数量
输出参数:
	recGrp		记录数组
返回值
	>=0		成功,读取的记录数量
	<0		失败,错误码
*/
int UnionBatchReadComplexFieldRec(char *condition,TUnionComplexField recGrp[],int maxRecNum);

//***** 函数声明结束 *****

#endif
