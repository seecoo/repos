// Automatically generated codes
// Generated Date and Time 20090519142848
// Generated by ud090401

#ifndef _unionFileManager_
#define _unionFileManager_


// 定义表的域名常量
#define conFileManagerFldNameTableName		"tableName"
#define conFileManagerFldNameFileType		"fileType"
#define conFileManagerFldNameFileStoreDir		"fileStoreDir"
#define conFileManagerFldNameFileNameFldName		"fileNameFldName"
#define conFileManagerFldNamePrimaryKeyList		"primaryKeyList"
#define conFileManagerFldNameRemark		"remark"
#define conFileManagerFldNameInputTeller		"inputTeller"
#define conFileManagerFldNameInputDate		"inputDate"
#define conFileManagerFldNameInputTime		"inputTime"
#define conFileManagerFldNameUpdateTeller		"updateTeller"
#define conFileManagerFldNameUpdateDate		"updateDate"
#define conFileManagerFldNameUpdateTime		"updateTime"

/*
*** 结构对应的表信息 ***
表名::          fileManager
表名宏定义::    conTBLNameFileManager
表资源宏定义::  conResIDFileManager
关键字::        tableName,fileType
*/

// 定义表记录对应的结构
typedef struct
{
	char	tableName[40+1];	// 表名称
	int	fileType;	// 文件类型标识
	char	fileStoreDir[1024+1];	// 文件存储目录
	char	fileNameFldName[128+1];	// 文件名称字段名
	char	primaryKeyList[1024+1];	// 表关键字清单
	char	remark[128+1];	// 128个字符的说明
	char	inputTeller[20+1];	// 记录插入数据库时，系统自动附加的操作员标识
	char	inputDate[8+1];	// 记录插入数据库时，系统自动附加的日期
	char	inputTime[6+1];	// 记录插入数据库时，系统自动附加的时间
	char	updateTeller[20+1];	// 记录修改时，系统自动附加的操作员标识
	char	updateDate[8+1];	// 记录修改时，系统自动附加的日期
	char	updateTime[6+1];	// 记录修改时，系统自动附加的时间
} TUnionFileManager;
typedef TUnionFileManager	*PUnionFileManager;

//***** 以下定义函数声明 *****

/*
功能：
	读取一个目录
输入参数:
	tableName 	表名称
	fileType 	文件类型标识
	sizeOfBuf	缓冲大小
输出参数:
	dir		目录
返回值
	>=0		成功，返回目录的大小
	<0		失败,错误码
*/
int UnionReadFileDirFromFileManager(char *tableName,int fileType,char *dir,int sizeOfBuf);

/*
功能：
	结构的缺省赋值函数
输入参数:
	prec	记录指针
输出参数:
	无
返回值
	>=0		成功,拼装的记录串的长度
	<0		失败,错误码
*/
int UnionFormDefaultValueOfFileManagerRec(PUnionFileManager prec);


/*
功能：
	将记录结构转换为记录字串的函数
输入参数:
	prec	记录指针
	sizeOfBuf	接收记录字串的缓冲的大小
输出参数:
	recStr	记录字串
返回值
	>=0		成功,拼装的记录串的长度
	<0		失败,错误码
*/
int UnionFormRecStrFromFileManagerRec(PUnionFileManager prec,char *recStr,int sizeOfBuf);


/*
功能：
	将记录结构转换为记录字串的函数
输入参数:
	prec	记录指针
	sizeOfBuf	接收记录字串的缓冲的大小
输出参数:
	recStr	记录字串
返回值
	>=0		成功,拼装的记录串的长度
	<0		失败,错误码
*/
int UnionFormPrimaryKeyRecStrFromFileManagerRec(PUnionFileManager prec,char *recStr,int sizeOfBuf);


/*
功能：
	将记录字串转换为记录结构的关键字的函数
输入参数:
	recStr	记录字串
	lenOfRecStr	记录串长度
输出参数:
	prec	记录指针
返回值
	>=0		读出的域数目
	<0		失败,错误码
*/
int UnionFormPrimaryKeyOfFileManagerRecFromRecStr(char *recStr,int lenOfRecStr,PUnionFileManager prec);


/*
功能：
	将记录结构转换为记录字串的函数
输入参数:
	prec	记录指针
	sizeOfBuf	接收记录字串的缓冲的大小
输出参数:
	recStr	记录字串
返回值
	>=0		成功,拼装的记录串的长度
	<0		失败,错误码
*/
int UnionFormNonPrimaryKeyRecStrFromFileManagerRec(PUnionFileManager prec,char *recStr,int sizeOfBuf);


/*
功能：
	将记录结构转换为记录字串的函数
输入参数:
	recStr	记录字串
	lenOfRecStr	记录串长度
输出参数:
	prec	记录指针
返回值
	>=0		读出的域数目
	<0		失败,错误码
*/
int UnionFormFileManagerRecFromRecStr(char *recStr,int lenOfRecStr,PUnionFileManager prec);


/*
功能：
	插入一个记录
输入参数:
	prec	记录指针
输出参数:
	prec	记录指针
返回值
	>=0		成功，返回记录的大小
	<0		失败,错误码
*/
int UnionInsertFileManagerRec(PUnionFileManager prec);


/*
功能：
	删除一个记录
输入参数:
	tableName 表名称
	fileType 文件类型标识
输出参数:
	无
返回值:
	>=0 成功
	<0 失败
*/
int UnionDeleteFileManagerRec(char *tableName,int fileType);
/*
函数功能:
	修改指定的表域:
输入参数:
	tableName 表名称
	fileType 文件类型标识
	fldName 域名称
	fldValue 域值
	fldValueLen 域值长度
输出参数:
	无
返回值:
	>=0 成功
	<0 失败
*/
int UnionUpdateSpecFldOfFileManagerRec(char *tableName,int fileType,char *fldName,char *fldValue,int lenOfFldValue);
/*
函数功能:
	修改指定的表域:
输入参数:
	tableName 表名称
	fileType 文件类型标识
	fldName 域名称
	fldValue 域值
输出参数:
	无
返回值:
	>=0 成功
	<0 失败
*/
int UnionUpdateIntTypeSpecFldOfFileManagerRec(char *tableName,int fileType,char *fldName,int fldValue);


/*
功能：
	修改一个记录
输入参数:
	prec	记录指针
输出参数:
	prec	记录指针
返回值
	>=0		成功，返回记录的大小
	<0		失败,错误码
*/
int UnionUpdateFileManagerRec(PUnionFileManager prec);


/*
功能：
	读取一个记录
输入参数:
	tableName 表名称
	fileType 文件类型标识
输出参数:
	prec	记录指针
返回值
	>=0		成功，返回记录的大小
	<0		失败,错误码
*/
int UnionReadFileManagerRec(char *tableName,int fileType,PUnionFileManager prec);


/*
功能：
	读取一个记录
输入参数:
	tableName 表名称
	fileType 文件类型标识
	fldName		域名
	sizeOfBuf	域值缓冲大小
输出参数:
	fldValue	域值
返回值
	>=0		成功，返回域值的长度
	<0		失败,错误码
*/
int UnionReadFileManagerRecFld(char *tableName,int fileType,char *fldName,char *fldValue,int sizeOfBuf);


/*
功能：
	读取一个记录
输入参数:
	tableName 表名称
	fileType 文件类型标识
	fldName		域名
输出参数:
	fldValue	域值
返回值
	>=0		成功，返回域值的长度
	<0		失败,错误码
*/
int UnionReadFileManagerRecIntTypeFld(char *tableName,int fileType,char *fldName,int *fldValue);

//***** 函数声明结束 *****

#endif
