// Automatically generated codes
// Generated Date and Time 20091110172931
// Generated by ud090401

#ifndef _unionHsmGroup_
#define _unionHsmGroup_

#include "unionHsmCmdVersion.h"

// 定义表的域名常量
#define conHsmGroupFldNameHsmGrpID		"hsmGrpID"
#define conHsmGroupFldNameHsmCmdVersionID		"hsmCmdVersionID"
#define conHsmGroupFldNameLenOfLenFld		"lenOfLenFld"
#define conHsmGroupFldNameLenOfMsgHeader		"lenOfMsgHeader"
#define conHsmGroupFldNameMsgHeader		"msgHeader"
#define conHsmGroupFldNameVkSpaceSize		"vkSpaceSize"
#define conHsmGroupFldNameVkStartIndex		"vkStartIndex"
#define conHsmGroupFldNameRsaBackupFileName		"rsaBackupFileName"
#define conHsmGroupFldNameDesKeySpaceSize		"desKeySpaceSize"
#define conHsmGroupFldNameDesKeyStartIndex		"desKeyStartIndex"
#define conHsmGroupFldNameDesKeyBackupFileName		"desKeyBackupFileName"
#define conHsmGroupFldNameTestCmdReq		"testCmdReq"
#define conHsmGroupFldNameTestCmdSuccessRes		"testCmdSuccessRes"
#define conHsmGroupFldNameActive		"active"
#define conHsmGroupFldNameKeyMedia		"keyMedia"
#define conHsmGroupFldNameKmcID		"kmcID"
#define conHsmGroupFldNameRemark		"remark"
#define conHsmGroupFldNameInputTeller		"inputTeller"
#define conHsmGroupFldNameInputDate		"inputDate"
#define conHsmGroupFldNameInputTime		"inputTime"
#define conHsmGroupFldNameUpdateTeller		"updateTeller"
#define conHsmGroupFldNameUpdateDate		"updateDate"
#define conHsmGroupFldNameUpdateTime		"updateTime"

/*
*** 结构对应的表信息 ***
表名::          hsmGroup
表名宏定义::    conTBLNameHsmGroup
表资源宏定义::  conResIDHsmGroup
关键字::        hsmGrpID
*/

// 定义表记录对应的结构
typedef struct
{
	char	hsmGrpID[40+1];	// 密码机组号
	int	hsmCmdVersionID;	// 密码机指令类型
	int	lenOfLenFld;	// 长度域的标识
	int	lenOfMsgHeader;	// 消息头域的长度，为[0~12]
	char	msgHeader[12+1];	// 指令消息头缺省值
	int	vkSpaceSize;	// 私钥存储空间大小
	int	vkStartIndex;	// 私钥起始索引号
	char	rsaBackupFileName[128+1];	// rsa备份文件名
	int	desKeySpaceSize;	// DES密钥存储空间大小
	int	desKeyStartIndex;	// DES密钥起始索引号
	char	desKeyBackupFileName[128+1];	// 对称密钥备份文件名
	char	testCmdReq[128+1];	// 测试指令请求
	char	testCmdSuccessRes[128+1];	// 测试指令响应成功标志
	int	active;	// 启用状态
	char	keyMedia[40+1];	// 密钥载体标识
	char	kmcID[40+1];	// 密钥管理中心标识
	char	remark[128+1];	// 128个字符的说明
	char	inputTeller[20+1];	// 记录插入数据库时，系统自动附加的操作员标识
	char	inputDate[8+1];	// 记录插入数据库时，系统自动附加的日期
	char	inputTime[6+1];	// 记录插入数据库时，系统自动附加的时间
	char	updateTeller[20+1];	// 记录修改时，系统自动附加的操作员标识
	char	updateDate[8+1];	// 记录修改时，系统自动附加的日期
	char	updateTime[6+1];	// 记录修改时，系统自动附加的时间
} TUnionHsmGroup;
typedef TUnionHsmGroup	*PUnionHsmGroup;

//***** 以下定义函数声明 *****


/*
功能：
	结构的缺省赋值函数
输入参数:
	prec	记录指针
输出参数:
	无
返回值
	>=0		成功,拼装的记录串的长度
	<0		失败,错误码
*/
int UnionFormDefaultValueOfHsmGroupRec(PUnionHsmGroup prec);


/*
功能：
	将记录结构转换为记录字串的函数
输入参数:
	prec	记录指针
	sizeOfBuf	接收记录字串的缓冲的大小
输出参数:
	recStr	记录字串
返回值
	>=0		成功,拼装的记录串的长度
	<0		失败,错误码
*/
int UnionFormRecStrFromHsmGroupRec(PUnionHsmGroup prec,char *recStr,int sizeOfBuf);


/*
功能：
	将记录结构转换为记录字串的函数
输入参数:
	prec	记录指针
	sizeOfBuf	接收记录字串的缓冲的大小
输出参数:
	recStr	记录字串
返回值
	>=0		成功,拼装的记录串的长度
	<0		失败,错误码
*/
int UnionFormPrimaryKeyRecStrFromHsmGroupRec(PUnionHsmGroup prec,char *recStr,int sizeOfBuf);


/*
功能：
	将记录字串转换为记录结构的关键字的函数
输入参数:
	recStr	记录字串
	lenOfRecStr	记录串长度
输出参数:
	prec	记录指针
返回值
	>=0		读出的域数目
	<0		失败,错误码
*/
int UnionFormPrimaryKeyOfHsmGroupRecFromRecStr(char *recStr,int lenOfRecStr,PUnionHsmGroup prec);


/*
功能：
	将记录结构转换为记录字串的函数
输入参数:
	prec	记录指针
	sizeOfBuf	接收记录字串的缓冲的大小
输出参数:
	recStr	记录字串
返回值
	>=0		成功,拼装的记录串的长度
	<0		失败,错误码
*/
int UnionFormNonPrimaryKeyRecStrFromHsmGroupRec(PUnionHsmGroup prec,char *recStr,int sizeOfBuf);


/*
功能：
	将记录结构转换为记录字串的函数
输入参数:
	recStr	记录字串
	lenOfRecStr	记录串长度
输出参数:
	prec	记录指针
返回值
	>=0		读出的域数目
	<0		失败,错误码
*/
int UnionFormHsmGroupRecFromRecStr(char *recStr,int lenOfRecStr,PUnionHsmGroup prec);


/*
功能：
	插入一个记录
输入参数:
	prec	记录指针
输出参数:
	prec	记录指针
返回值
	>=0		成功，返回记录的大小
	<0		失败,错误码
*/
int UnionInsertHsmGroupRec(PUnionHsmGroup prec);


/*
功能：
	删除一个记录
输入参数:
	hsmGrpID 密码机组号
输出参数:
	无
返回值:
	>=0 成功
	<0 失败
*/
int UnionDeleteHsmGroupRec(char *hsmGrpID);
/*
函数功能:
	修改指定的表域:
输入参数:
	hsmGrpID 密码机组号
	fldName 域名称
	fldValue 域值
	fldValueLen 域值长度
输出参数:
	无
返回值:
	>=0 成功
	<0 失败
*/
int UnionUpdateSpecFldOfHsmGroupRec(char *hsmGrpID,char *fldName,char *fldValue,int lenOfFldValue);
/*
函数功能:
	修改指定的表域:
输入参数:
	hsmGrpID 密码机组号
	fldName 域名称
	fldValue 域值
输出参数:
	无
返回值:
	>=0 成功
	<0 失败
*/
int UnionUpdateIntTypeSpecFldOfHsmGroupRec(char *hsmGrpID,char *fldName,int fldValue);


/*
功能：
	修改一个记录
输入参数:
	prec	记录指针
输出参数:
	prec	记录指针
返回值
	>=0		成功，返回记录的大小
	<0		失败,错误码
*/
int UnionUpdateHsmGroupRec(PUnionHsmGroup prec);


/*
功能：
	读取一个记录
输入参数:
	hsmGrpID 密码机组号
输出参数:
	prec	记录指针
返回值
	>=0		成功，返回记录的大小
	<0		失败,错误码
*/
int UnionReadHsmGroupRec(char *hsmGrpID,PUnionHsmGroup prec);


/*
功能：
	读取一个记录
输入参数:
	hsmGrpID 密码机组号
	fldName		域名
	sizeOfBuf	域值缓冲大小
输出参数:
	fldValue	域值
返回值
	>=0		成功，返回域值的长度
	<0		失败,错误码
*/
int UnionReadHsmGroupRecFld(char *hsmGrpID,char *fldName,char *fldValue,int sizeOfBuf);


/*
功能：
	读取一个记录
输入参数:
	hsmGrpID 密码机组号
	fldName		域名
输出参数:
	fldValue	域值
返回值
	>=0		成功，返回域值的长度
	<0		失败,错误码
*/
int UnionReadHsmGroupRecIntTypeFld(char *hsmGrpID,char *fldName,int *fldValue);


/*
功能：
	根据条件，批量读取数据
输入参数:
	condition	条件字串
	maxRecNum		读取的最大记录数量
输出参数:
	recGrp		记录数组
返回值
	>=0		成功,读取的记录数量
	<0		失败,错误码
*/
int UnionBatchReadHsmGroupRec(char *condition,TUnionHsmGroup recGrp[],int maxRecNum);

//***** 函数声明结束 *****

#endif
