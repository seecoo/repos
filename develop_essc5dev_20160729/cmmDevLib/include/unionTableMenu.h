// Automatically generated codes
// Generated Date and Time 20090604210012
// Generated by ud090401

#ifndef _unionTableMenu_
#define _unionTableMenu_


// 定义表的域名常量
#define conTableMenuFldNameMenuName		"menuName"
#define conTableMenuFldNameMenuDisplayname		"menuDisplayname"
#define conTableMenuFldNameTableMenuType		"tableMenuType"
#define conTableMenuFldNameTableName		"tableName"
#define conTableMenuFldNameOperatingTableName		"operatingTableName"
#define conTableMenuFldNameServiceName		"serviceName"
#define conTableMenuFldNameServiceID		"serviceID"
#define conTableMenuFldNameConditionsMenu		"conditionsMenu"
#define conTableMenuFldNameVisualLevelListOfMenu		"visualLevelListOfMenu"
#define conTableMenuFldNameViewDownloadFile		"viewDownloadFile"
#define conTableMenuFldNameRemark		"remark"
#define conTableMenuFldNameInputTeller		"inputTeller"
#define conTableMenuFldNameInputDate		"inputDate"
#define conTableMenuFldNameInputTime		"inputTime"
#define conTableMenuFldNameUpdateTeller		"updateTeller"
#define conTableMenuFldNameUpdateDate		"updateDate"
#define conTableMenuFldNameUpdateTime		"updateTime"

/*
*** 结构对应的表信息 ***
表名::          tableMenu
表名宏定义::    conTBLNameTableMenu
表资源宏定义::  conResIDTableMenu
关键字::        tableName,menuName
*/

// 定义表记录对应的结构
typedef struct
{
	char	menuName[128+1];
	char	menuDisplayname[128+1];	// 菜单项显示名称
	int	tableMenuType;	// 表菜单类型
	char	tableName[40+1];	// 表名称
	char	operatingTableName[128+1];	// 操作表名
	char	serviceName[40+1];	// 操作名称
	int	serviceID;	// 菜单定义的操作ID号
	char	conditionsMenu[128+1];	// 菜单条件
	char	visualLevelListOfMenu[1024+1];	// 菜单可视级别清单
	int	viewDownloadFile;	// 查看下载的文件
	char	remark[128+1];	// 128个字符的说明
	char	inputTeller[20+1];	// 记录插入数据库时，系统自动附加的操作员标识
	char	inputDate[8+1];	// 记录插入数据库时，系统自动附加的日期
	char	inputTime[6+1];	// 记录插入数据库时，系统自动附加的时间
	char	updateTeller[20+1];	// 记录修改时，系统自动附加的操作员标识
	char	updateDate[8+1];	// 记录修改时，系统自动附加的日期
	char	updateTime[6+1];	// 记录修改时，系统自动附加的时间
} TUnionTableMenu;
typedef TUnionTableMenu	*PUnionTableMenu;

//***** 以下定义函数声明 *****


/*
功能：
	结构的缺省赋值函数
输入参数:
	prec	记录指针
输出参数:
	无
返回值
	>=0		成功,拼装的记录串的长度
	<0		失败,错误码
*/
int UnionFormDefaultValueOfTableMenuRec(PUnionTableMenu prec);


/*
功能：
	将记录结构转换为记录字串的函数
输入参数:
	prec	记录指针
	sizeOfBuf	接收记录字串的缓冲的大小
输出参数:
	recStr	记录字串
返回值
	>=0		成功,拼装的记录串的长度
	<0		失败,错误码
*/
int UnionFormRecStrFromTableMenuRec(PUnionTableMenu prec,char *recStr,int sizeOfBuf);


/*
功能：
	将记录结构转换为记录字串的函数
输入参数:
	prec	记录指针
	sizeOfBuf	接收记录字串的缓冲的大小
输出参数:
	recStr	记录字串
返回值
	>=0		成功,拼装的记录串的长度
	<0		失败,错误码
*/
int UnionFormPrimaryKeyRecStrFromTableMenuRec(PUnionTableMenu prec,char *recStr,int sizeOfBuf);


/*
功能：
	将记录字串转换为记录结构的关键字的函数
输入参数:
	recStr	记录字串
	lenOfRecStr	记录串长度
输出参数:
	prec	记录指针
返回值
	>=0		读出的域数目
	<0		失败,错误码
*/
int UnionFormPrimaryKeyOfTableMenuRecFromRecStr(char *recStr,int lenOfRecStr,PUnionTableMenu prec);


/*
功能：
	将记录结构转换为记录字串的函数
输入参数:
	prec	记录指针
	sizeOfBuf	接收记录字串的缓冲的大小
输出参数:
	recStr	记录字串
返回值
	>=0		成功,拼装的记录串的长度
	<0		失败,错误码
*/
int UnionFormNonPrimaryKeyRecStrFromTableMenuRec(PUnionTableMenu prec,char *recStr,int sizeOfBuf);


/*
功能：
	将记录结构转换为记录字串的函数
输入参数:
	recStr	记录字串
	lenOfRecStr	记录串长度
输出参数:
	prec	记录指针
返回值
	>=0		读出的域数目
	<0		失败,错误码
*/
int UnionFormTableMenuRecFromRecStr(char *recStr,int lenOfRecStr,PUnionTableMenu prec);


/*
功能：
	插入一个记录
输入参数:
	prec	记录指针
输出参数:
	prec	记录指针
返回值
	>=0		成功，返回记录的大小
	<0		失败,错误码
*/
int UnionInsertTableMenuRec(PUnionTableMenu prec);


/*
功能：
	删除一个记录
输入参数:
	tableName 表名称
	menuName 
输出参数:
	无
返回值:
	>=0 成功
	<0 失败
*/
int UnionDeleteTableMenuRec(char *tableName,char *menuName);
/*
函数功能:
	修改指定的表域:
输入参数:
	tableName 表名称
	menuName 
	fldName 域名称
	fldValue 域值
	fldValueLen 域值长度
输出参数:
	无
返回值:
	>=0 成功
	<0 失败
*/
int UnionUpdateSpecFldOfTableMenuRec(char *tableName,char *menuName,char *fldName,char *fldValue,int lenOfFldValue);
/*
函数功能:
	修改指定的表域:
输入参数:
	tableName 表名称
	menuName 
	fldName 域名称
	fldValue 域值
输出参数:
	无
返回值:
	>=0 成功
	<0 失败
*/
int UnionUpdateIntTypeSpecFldOfTableMenuRec(char *tableName,char *menuName,char *fldName,int fldValue);


/*
功能：
	修改一个记录
输入参数:
	prec	记录指针
输出参数:
	prec	记录指针
返回值
	>=0		成功，返回记录的大小
	<0		失败,错误码
*/
int UnionUpdateTableMenuRec(PUnionTableMenu prec);


/*
功能：
	读取一个记录
输入参数:
	tableName 表名称
	menuName 
输出参数:
	prec	记录指针
返回值
	>=0		成功，返回记录的大小
	<0		失败,错误码
*/
int UnionReadTableMenuRec(char *tableName,char *menuName,PUnionTableMenu prec);


/*
功能：
	读取一个记录
输入参数:
	tableName 表名称
	menuName 
	fldName		域名
	sizeOfBuf	域值缓冲大小
输出参数:
	fldValue	域值
返回值
	>=0		成功，返回域值的长度
	<0		失败,错误码
*/
int UnionReadTableMenuRecFld(char *tableName,char *menuName,char *fldName,char *fldValue,int sizeOfBuf);


/*
功能：
	读取一个记录
输入参数:
	tableName 表名称
	menuName 
	fldName		域名
输出参数:
	fldValue	域值
返回值
	>=0		成功，返回域值的长度
	<0		失败,错误码
*/
int UnionReadTableMenuRecIntTypeFld(char *tableName,char *menuName,char *fldName,int *fldValue);


/*
功能：
	根据条件，批量读取数据
输入参数:
	condition	条件字串
	maxRecNum		读取的最大记录数量
输出参数:
	recGrp		记录数组
返回值
	>=0		成功,读取的记录数量
	<0		失败,错误码
*/
int UnionBatchReadTableMenuRec(char *condition,TUnionTableMenu recGrp[],int maxRecNum);

//***** 函数声明结束 *****

#endif
