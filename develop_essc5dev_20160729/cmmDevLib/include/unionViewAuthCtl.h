// Automatically generated codes
// Generated Date and Time 20100123141316
// Generated by ud090401

#ifndef _unionViewAuthCtl_
#define _unionViewAuthCtl_


// 定义表的域名常量
#define conViewAuthCtlFldNameID		"ID"
#define conViewAuthCtlFldNameIsVisualable		"isVisualable"
#define conViewAuthCtlFldNameDisplayName		"displayName"
#define conViewAuthCtlFldNameDisplayIndex		"displayIndex"
#define conViewAuthCtlFldNameIsBatchInputFld		"isBatchInputFld"
#define conViewAuthCtlFldNameVisualLevel0		"visualLevel0"
#define conViewAuthCtlFldNameVisualLevel1		"visualLevel1"
#define conViewAuthCtlFldNameVisualLevel2		"visualLevel2"
#define conViewAuthCtlFldNameVisualLevel3		"visualLevel3"
#define conViewAuthCtlFldNameVisualLevel4		"visualLevel4"
#define conViewAuthCtlFldNameVisualLevel5		"visualLevel5"
#define conViewAuthCtlFldNameVisualLevel6		"visualLevel6"
#define conViewAuthCtlFldNameVisualLevel7		"visualLevel7"
#define conViewAuthCtlFldNameVisualLevel8		"visualLevel8"
#define conViewAuthCtlFldNameVisualLevel9		"visualLevel9"
#define conViewAuthCtlFldNameEditLevel0		"editLevel0"
#define conViewAuthCtlFldNameEditLevel1		"editLevel1"
#define conViewAuthCtlFldNameEditLevel2		"editLevel2"
#define conViewAuthCtlFldNameEditLevel3		"editLevel3"
#define conViewAuthCtlFldNameEditLevel4		"editLevel4"
#define conViewAuthCtlFldNameEditLevel5		"editLevel5"
#define conViewAuthCtlFldNameEditLevel6		"editLevel6"
#define conViewAuthCtlFldNameEditLevel7		"editLevel7"
#define conViewAuthCtlFldNameEditLevel8		"editLevel8"
#define conViewAuthCtlFldNameEditLevel9		"editLevel9"

/*
*** 结构对应的表信息 ***
表名::          viewAuthCtl
表名宏定义::    conTBLNameViewAuthCtl
表资源宏定义::  conResIDViewAuthCtl
关键字::        ID
*/

// 定义表记录对应的结构
typedef struct
{
	char	ID[40+1];	// 用户定义的，用于唯一识别一条记录的名称
	int	isVisualable;
	char	displayName[128+1];	// 显示名称
	int	displayIndex;
	int	isBatchInputFld;
	int	visualLevel0;
	int	visualLevel1;
	int	visualLevel2;
	int	visualLevel3;
	int	visualLevel4;
	int	visualLevel5;
	int	visualLevel6;
	int	visualLevel7;
	int	visualLevel8;
	int	visualLevel9;
	int	editLevel0;
	int	editLevel1;
	int	editLevel2;
	int	editLevel3;
	int	editLevel4;
	int	editLevel5;
	int	editLevel6;
	int	editLevel7;
	int	editLevel8;
	int	editLevel9;
} TUnionViewAuthCtl;
typedef TUnionViewAuthCtl	*PUnionViewAuthCtl;

//***** 以下定义函数声明 *****


/*
功能：
	结构的缺省赋值函数
输入参数:
	prec	记录指针
输出参数:
	无
返回值
	>=0		成功,拼装的记录串的长度
	<0		失败,错误码
*/
int UnionFormDefaultValueOfViewAuthCtlRec(PUnionViewAuthCtl prec);


/*
功能：
	将记录结构转换为记录字串的函数
输入参数:
	prec	记录指针
	sizeOfBuf	接收记录字串的缓冲的大小
输出参数:
	recStr	记录字串
返回值
	>=0		成功,拼装的记录串的长度
	<0		失败,错误码
*/
int UnionFormRecStrFromViewAuthCtlRec(PUnionViewAuthCtl prec,char *recStr,int sizeOfBuf);


/*
功能：
	将记录结构转换为记录字串的函数
输入参数:
	prec	记录指针
	sizeOfBuf	接收记录字串的缓冲的大小
输出参数:
	recStr	记录字串
返回值
	>=0		成功,拼装的记录串的长度
	<0		失败,错误码
*/
int UnionFormPrimaryKeyRecStrFromViewAuthCtlRec(PUnionViewAuthCtl prec,char *recStr,int sizeOfBuf);


/*
功能：
	将记录字串转换为记录结构的关键字的函数
输入参数:
	recStr	记录字串
	lenOfRecStr	记录串长度
输出参数:
	prec	记录指针
返回值
	>=0		读出的域数目
	<0		失败,错误码
*/
int UnionFormPrimaryKeyOfViewAuthCtlRecFromRecStr(char *recStr,int lenOfRecStr,PUnionViewAuthCtl prec);


/*
功能：
	将记录结构转换为记录字串的函数
输入参数:
	prec	记录指针
	sizeOfBuf	接收记录字串的缓冲的大小
输出参数:
	recStr	记录字串
返回值
	>=0		成功,拼装的记录串的长度
	<0		失败,错误码
*/
int UnionFormNonPrimaryKeyRecStrFromViewAuthCtlRec(PUnionViewAuthCtl prec,char *recStr,int sizeOfBuf);


/*
功能：
	将记录结构转换为记录字串的函数
输入参数:
	recStr	记录字串
	lenOfRecStr	记录串长度
输出参数:
	prec	记录指针
返回值
	>=0		读出的域数目
	<0		失败,错误码
*/
int UnionFormViewAuthCtlRecFromRecStr(char *recStr,int lenOfRecStr,PUnionViewAuthCtl prec);


/*
功能：
	插入一个记录
输入参数:
	prec	记录指针
输出参数:
	prec	记录指针
返回值
	>=0		成功，返回记录的大小
	<0		失败,错误码
*/
int UnionInsertViewAuthCtlRec(PUnionViewAuthCtl prec);


/*
功能：
	删除一个记录
输入参数:
	ID 用户定义的，用于唯一识别一条记录的名称
输出参数:
	无
返回值:
	>=0 成功
	<0 失败
*/
int UnionDeleteViewAuthCtlRec(char *ID);
/*
函数功能:
	修改指定的表域:
输入参数:
	ID 用户定义的，用于唯一识别一条记录的名称
	fldName 域名称
	fldValue 域值
	fldValueLen 域值长度
输出参数:
	无
返回值:
	>=0 成功
	<0 失败
*/
int UnionUpdateSpecFldOfViewAuthCtlRec(char *ID,char *fldName,char *fldValue,int lenOfFldValue);
/*
函数功能:
	修改指定的表域:
输入参数:
	ID 用户定义的，用于唯一识别一条记录的名称
	fldName 域名称
	fldValue 域值
输出参数:
	无
返回值:
	>=0 成功
	<0 失败
*/
int UnionUpdateIntTypeSpecFldOfViewAuthCtlRec(char *ID,char *fldName,int fldValue);


/*
功能：
	修改一个记录
输入参数:
	prec	记录指针
输出参数:
	prec	记录指针
返回值
	>=0		成功，返回记录的大小
	<0		失败,错误码
*/
int UnionUpdateViewAuthCtlRec(PUnionViewAuthCtl prec);


/*
功能：
	读取一个记录
输入参数:
	ID 用户定义的，用于唯一识别一条记录的名称
输出参数:
	prec	记录指针
返回值
	>=0		成功，返回记录的大小
	<0		失败,错误码
*/
int UnionReadViewAuthCtlRec(char *ID,PUnionViewAuthCtl prec);


/*
功能：
	读取一个记录
输入参数:
	ID 用户定义的，用于唯一识别一条记录的名称
	fldName		域名
	sizeOfBuf	域值缓冲大小
输出参数:
	fldValue	域值
返回值
	>=0		成功，返回域值的长度
	<0		失败,错误码
*/
int UnionReadViewAuthCtlRecFld(char *ID,char *fldName,char *fldValue,int sizeOfBuf);


/*
功能：
	读取一个记录
输入参数:
	ID 用户定义的，用于唯一识别一条记录的名称
	fldName		域名
输出参数:
	fldValue	域值
返回值
	>=0		成功，返回域值的长度
	<0		失败,错误码
*/
int UnionReadViewAuthCtlRecIntTypeFld(char *ID,char *fldName,int *fldValue);


/*
功能：
	根据条件，批量读取数据
输入参数:
	condition	条件字串
	maxRecNum		读取的最大记录数量
输出参数:
	recGrp		记录数组
返回值
	>=0		成功,读取的记录数量
	<0		失败,错误码
*/
int UnionBatchReadViewAuthCtlRec(char *condition,TUnionViewAuthCtl recGrp[],int maxRecNum);

//***** 函数声明结束 *****

#endif
