// Automatically generated codes
// Generated Date and Time 20120803141102
// Generated by ud120425

#ifndef _unionHsm_
#define _unionHsm_

// 不明状态
#define conHsmStatusUnknowStatus	100
// 冷备份的密码机
#define conHsmStatusColdBackupSJL06	2
// 异常状态的密码机
#define conHsmStatusAbnormalSJL06	0
// 正常工作的密码机
#define conHsmStatusOnlineSJL06		1

// 无特殊用途
#define conHsmFunctionStandard		0
// 打印密钥
#define conHsmFunctionPrintKey		1

// 定义表的域名常量
#define conHsmFldNameIpAddr		"ipAddr"
#define conHsmFldNameHsmGrpID		"hsmGrpID"
#define conHsmFldNamePort		"port"
#define conHsmFldNameActive		"active"
#define conHsmFldNameHsmStatusID		"hsmStatusID"
#define conHsmFldNameHsmFunction		"hsmFunction"
#define conHsmFldNameSuccessResTimes		"successResTimes"
#define conHsmFldNameFailResTimes		"failResTimes"
#define conHsmFldNameAbnormalTimes		"abnormalTimes"
#define conHsmFldNameCoID		"coID"
#define conHsmFldNameModelID		"modelID"
#define conHsmFldNameID		"ID"
#define conHsmFldNameRemark		"remark"
#define conHsmFldNameInputTeller		"inputTeller"
#define conHsmFldNameInputDate		"inputDate"
#define conHsmFldNameInputTime		"inputTime"
#define conHsmFldNameUpdateTeller		"updateTeller"
#define conHsmFldNameUpdateDate		"updateDate"
#define conHsmFldNameUpdateTime		"updateTime"

/*
*** 结构对应的表信息 ***
表名::          hsm
表名宏定义::    conTBLNameHsm
表资源宏定义::  conResIDHsm
关键字::        ipAddr
*/

// 定义表记录对应的结构
typedef struct
{
	char	ipAddr[15+1];	// 密码机IP地址
	char	hsmGrpID[40+1];	// 与密码机设备分组表的同名字段关联
	int	port;	// 密码机端口号
	int	active;	// 启用状态
	int	hsmStatusID;	// 密码机状态ID号
	int	hsmFunction;	// 密码机用途
	int	successResTimes;	// 命令执行成功的次数，即命令返回码是00的次数
	int	failResTimes;	// 命令执行失败的次数，即命令返回码不是00的次数
	int	abnormalTimes;	// 命令执行异常的次数，即超时或没有响应或响应错位的次数
	char    coID[40+1];     // 厂商ID
	char    modelID[40+1];  // 模板ID
	char    ID[40+1];       // 标识
	char	remark[128+1];	// 128个字符的说明
	char	inputTeller[20+1];	// 记录插入数据库时，系统自动附加的操作员标识
	char	inputDate[8+1];	// 记录插入数据库时，系统自动附加的日期
	char	inputTime[6+1];	// 记录插入数据库时，系统自动附加的时间
	char	updateTeller[20+1];	// 记录修改时，系统自动附加的操作员标识
	char	updateDate[8+1];	// 记录修改时，系统自动附加的日期
	char	updateTime[6+1];	// 记录修改时，系统自动附加的时间
} TUnionHsm;
typedef TUnionHsm	*PUnionHsm;

//***** 以下定义函数声明 *****


/*
功能：
	结构的缺省赋值函数
输入参数:
	prec	记录指针
输出参数:
	无
返回值
	>=0		成功,拼装的记录串的长度
	<0		失败,错误码
*/
int UnionFormDefaultValueOfHsmRec(PUnionHsm prec);


/*
功能：
	将记录结构转换为记录字串的函数
输入参数:
	prec	记录指针
	sizeOfBuf	接收记录字串的缓冲的大小
输出参数:
	recStr	记录字串
返回值
	>=0		成功,拼装的记录串的长度
	<0		失败,错误码
*/
int UnionFormRecStrFromHsmRec(PUnionHsm prec,char *recStr,int sizeOfBuf);


/*
功能：
	将记录结构转换为记录字串的函数
输入参数:
	prec	记录指针
	sizeOfBuf	接收记录字串的缓冲的大小
输出参数:
	recStr	记录字串
返回值
	>=0		成功,拼装的记录串的长度
	<0		失败,错误码
*/
int UnionFormPrimaryKeyRecStrFromHsmRec(PUnionHsm prec,char *recStr,int sizeOfBuf);


/*
功能：
	将记录字串转换为记录结构的关键字的函数
输入参数:
	recStr	记录字串
	lenOfRecStr	记录串长度
输出参数:
	prec	记录指针
返回值
	>=0		读出的域数目
	<0		失败,错误码
*/
int UnionFormPrimaryKeyOfHsmRecFromRecStr(char *recStr,int lenOfRecStr,PUnionHsm prec);


/*
功能：
	将记录结构转换为记录字串的函数
输入参数:
	prec	记录指针
	sizeOfBuf	接收记录字串的缓冲的大小
输出参数:
	recStr	记录字串
返回值
	>=0		成功,拼装的记录串的长度
	<0		失败,错误码
*/
int UnionFormNonPrimaryKeyRecStrFromHsmRec(PUnionHsm prec,char *recStr,int sizeOfBuf);


/*
功能：
	将记录结构转换为记录字串的函数
输入参数:
	recStr	记录字串
	lenOfRecStr	记录串长度
输出参数:
	prec	记录指针
返回值
	>=0		读出的域数目
	<0		失败,错误码
*/
int UnionFormHsmRecFromRecStr(char *recStr,int lenOfRecStr,PUnionHsm prec);


/*
功能：
	插入一个记录
输入参数:
	prec	记录指针
输出参数:
	prec	记录指针
返回值
	>=0		成功，返回记录的大小
	<0		失败,错误码
*/
int UnionInsertHsmRec(PUnionHsm prec);


/*
功能：
	删除一个记录
输入参数:
	ipAddr 密码机IP地址
输出参数:
	无
返回值:
	>=0 成功
	<0 失败
*/
int UnionDeleteHsmRec(char *ipAddr);
/*
函数功能:
	修改指定的表域:
输入参数:
	ipAddr 密码机IP地址
	fldName 域名称
	fldValue 域值
	fldValueLen 域值长度
输出参数:
	无
返回值:
	>=0 成功
	<0 失败
*/
int UnionUpdateSpecFldOfHsmRec(char *ipAddr,char *fldName,char *fldValue,int lenOfFldValue);
/*
函数功能:
	修改指定的表域:
输入参数:
	ipAddr 密码机IP地址
	fldName 域名称
	fldValue 域值
输出参数:
	无
返回值:
	>=0 成功
	<0 失败
*/
int UnionUpdateIntTypeSpecFldOfHsmRec(char *ipAddr,char *fldName,int fldValue);


/*
功能：
	修改一个记录
输入参数:
	prec	记录指针
输出参数:
	prec	记录指针
返回值
	>=0		成功，返回记录的大小
	<0		失败,错误码
*/
int UnionUpdateHsmRec(PUnionHsm prec);


/*
功能：
	读取一个记录
输入参数:
	ipAddr 密码机IP地址
输出参数:
	prec	记录指针
返回值
	>=0		成功，返回记录的大小
	<0		失败,错误码
*/
int UnionReadHsmRec(char *ipAddr,PUnionHsm prec);


/*
功能：
	读取一个记录
输入参数:
	ipAddr 密码机IP地址
	fldName		域名
	sizeOfBuf	域值缓冲大小
输出参数:
	fldValue	域值
返回值
	>=0		成功，返回域值的长度
	<0		失败,错误码
*/
int UnionReadHsmRecFld(char *ipAddr,char *fldName,char *fldValue,int sizeOfBuf);


/*
功能：
	读取一个记录
输入参数:
	ipAddr 密码机IP地址
	fldName		域名
输出参数:
	fldValue	域值
返回值
	>=0		成功，返回域值的长度
	<0		失败,错误码
*/
int UnionReadHsmRecIntTypeFld(char *ipAddr,char *fldName,int *fldValue);


/*
功能：
	根据条件，批量读取数据
输入参数:
	condition	条件字串
	maxRecNum		读取的最大记录数量
输出参数:
	recGrp		记录数组
返回值
	>=0		成功,读取的记录数量
	<0		失败,错误码
*/
int UnionBatchReadHsmRec(char *condition,TUnionHsm recGrp[],int maxRecNum);

//***** 函数声明结束 *****

#endif
